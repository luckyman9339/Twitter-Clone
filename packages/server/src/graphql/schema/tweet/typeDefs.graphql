type Tweet {
  id: ID!
  content: String!
  user: User
  createdAt: String!
  likes: [User!]!
  likesCount: Int
}

type Retweet {
  id: ID!
  tweet: Tweet
  user: User
}

type Query {
  allTweets: [Tweet!]!
}

type Mutation {
  # TODO: change the return to include a payload instead of the value directly
  createTweet(input: CreateTweetInput!): Tweet
  retweet(input: RetweetInput!): RetweetPayload!
}

input CreateTweetInput {
  content: String!
}

input RetweetInput {
  tweetId: ID!
}

type RetweetPayload {
  retweet: Retweet!
}
